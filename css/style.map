{
	"version": 3,
	"file": "style.css",
	"sources": [
		"../scss/style.scss",
		"../scss/utilities/_index.scss",
		"../scss/utilities/_config.scss",
		"../scss/utilities/_functions.scss",
		"../scss/utilities/_helpers.scss",
		"../scss/utilities/_mixins.scss",
		"../scss/base/_index.scss",
		"../scss/layout/_index.scss"
	],
	"sourcesContent": [
		"// ==========================================================================\r\n// $Utilities\r\n// ==========================================================================\r\n@import 'utilities/index';\r\n\r\n// ==========================================================================\r\n// $Base\r\n// ==========================================================================\r\n@import 'base/index';\r\n\r\n// ==========================================================================\r\n// $Layout\r\n// ==========================================================================\r\n@import 'layout/index';\r\n",
		"// ==========================================================================\r\n// Global Config\r\n// ==========================================================================\r\n@import 'config';\r\n\r\n// ==========================================================================\r\n// Functions\r\n// ==========================================================================\r\n@import 'functions';\r\n\r\n// ==========================================================================\r\n// Helpers\r\n// ==========================================================================\r\n@import 'helpers';\r\n\r\n// ==========================================================================\r\n// Mixins\r\n// ==========================================================================\r\n@import 'mixins';",
		"// ==========================================================================\r\n// Global Config\r\n// ==========================================================================\r\n\r\n// Font Stacks\r\n\r\n$font-url--google : 'http://fonts.googleapis.com/css?family=Lato:100,300,400,700,900';\r\n$font-family--primary : 'Lato',\r\n'Helvetica Neue',\r\nHelvetica,\r\nArial,\r\nsans-serif;\r\n$font-family--secondary : 'Helvetica Neue',\r\nHelvetica,\r\nArial,\r\nsans-serif;\r\n\r\n// Font Weights\r\n\r\n$font-weight--thin : 100;\r\n$font-weight--light : 300;\r\n$font-weight--medium : 400;\r\n$font-weight--bold : 700;\r\n$font-weight--ultra-bold : 900;\r\n\r\n// Descriptive Base Colors\r\n\r\n$white : #fff;\r\n$black : #0b0b0b;\r\n$grey : #797e83;\r\n\r\n$fountain-blue : #52bab3;\r\n$emerald : #5ece7f;\r\n$sunglo : #e67478;\r\n$coral : #ff784f;\r\n$purple-majesty : #9279c3;\r\n$scooter : #39add1;\r\n\r\n// Color Usage\r\n\r\n$color-primary : $fountain-blue;\r\n$color-secondary : $scooter;\r\n$color-accent : $emerald;\r\n$color-shadow : rgba($black, .2);\r\n\r\n// Color Palette Modifiers\r\n\r\n$color-palettes: (\r\n    grey: (xx-light : lighten($grey, 43%),\r\n        x-light : lighten($grey, 35%),\r\n        light : lighten($grey, 12%),\r\n        base : $grey,\r\n        dark : darken($grey, 8%),\r\n        x-dark : darken($grey, 16%)),\r\n    black: (light : lighten($black, 10%),\r\n        base : $black,\r\n        dark : darken($black, 10%))\r\n);\r\n\r\n// UI Colors\r\n\r\n$ui-colors: (\r\n    default : $fountain-blue,\r\n    success : $emerald,\r\n    error : $sunglo,\r\n    warning : $coral,\r\n    info : $purple-majesty\r\n);\r\n\r\n// Text\r\n\r\n$base__font-size : 16px;\r\n$base__line : 24px;\r\n$letter-space : 1px;\r\n\r\n// Border radius\r\n\r\n$br--default : .4em;\r\n$br--round : 50%;\r\n\r\n// Transitions\r\n\r\n$trns-duration : .3s;\r\n\r\n// Path to Assets\r\n\r\n$path--rel : \"../img\";",
		"// ==========================================================================\r\n// Functions\r\n// ==========================================================================\r\n\r\n// Import if Google Fonts URL is defined\r\n\r\n@if variable-exists(font-url--google) {\r\n    @import url($font-url--google);\r\n}\r\n\r\n// Calculate em values\r\n\r\n@function em($target, $context: $base__font-size) {\r\n    @return ($target / $context) * 1em;\r\n}\r\n\r\n// Call the color palette modifiers in color values\r\n\r\n@function palette($palette, $shade: 'base') {\r\n    @return map-get(map-get($color-palettes, $palette), $shade);\r\n}",
		"// ==========================================================================\r\n// Helpers\r\n// ==========================================================================\r\n\r\n// Clearfix\r\n\r\n%clearfix {\r\n    &:after {\r\n        content: \"\";\r\n        display: table;\r\n        clear: both;\r\n    }\r\n}\r\n\r\n// Screen reader text\r\n\r\n.srt {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n}\r\n\r\n// Center alignment\r\n\r\n%center-align {\r\n    text-align: center;\r\n}\r\n\r\n// For pseudo-elements\r\n\r\n%pseudos {\r\n    display: block;\r\n    content: '';\r\n    position: absolute;\r\n}\r\n\r\n// Center elements\r\n\r\n.centered {\r\n    float: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}",
		"// ==========================================================================\r\n// Mixins\r\n// ==========================================================================\r\n\r\n// BEM selectors\r\n\r\n@mixin e($element) {\r\n    &__#{$element} {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin m($modifier) {\r\n    &--#{$modifier} {\r\n        @content;\r\n    }\r\n}\r\n\r\n// Generate modifier color classes\r\n\r\n@mixin bg-colors($map) {\r\n    @each $theme, $color in $map {\r\n        &--#{$theme} {\r\n            background-color: $color;\r\n        }\r\n    }\r\n}\r\n\r\n// Generating :before or :after pseudo-element shapes\r\n\r\n@mixin p-el($el,\r\n    $el-w: null,\r\n    $el-h: null) {\r\n    @if $el ==\"before\" or $el ==\"after\" {\r\n        &:#{$el} {\r\n            @extend %pseudos;\r\n            width: $el-w;\r\n            height: $el-h;\r\n            @content;\r\n        }\r\n    }\r\n\r\n    @else {\r\n        @error \"`#{$el}` is not a valid pseudo-element.\";\r\n    }\r\n}\r\n\r\n// Image replacement\r\n\r\n@mixin img-replace($img, $w, $h, $disp: block) {\r\n    background-image: url('#{$path--rel}/#{$img}');\r\n    background-repeat: no-repeat;\r\n    width: $w;\r\n    height: $h;\r\n    display: $disp;\r\n}",
		"",
		""
	],
	"names": [],
	"mappings": "AGOI,OAAO,CAAC,sEAAI;;ACShB,AAAA,IAAI,CAAC;EACD,MAAM,EAAE,CAAC;EACT,IAAI,EAAE,aAAa;EACnB,MAAM,EAAE,GAAG;EACX,MAAM,EAAE,IAAI;EACZ,QAAQ,EAAE,MAAM;EAChB,OAAO,EAAE,CAAC;EACV,QAAQ,EAAE,QAAQ;EAClB,KAAK,EAAE,GAAG,GACb;;;AAkBD,AAAA,SAAS,CAAC;EACN,KAAK,EAAE,IAAI;EACX,WAAW,EAAE,IAAI;EACjB,YAAY,EAAE,IAAI,GACrB"
}